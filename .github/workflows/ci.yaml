name: Build linux binary
on: push
jobs:
  build-linux:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Install dependencies
        uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: libxi-dev libxcursor-dev libglfw3-dev libasound2-dev
          version: 1.0
      - uses: mlugg/setup-zig@v1
      - run: zig build -Doptimize=ReleaseSafe
      - name: Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            zig-out/bin/game

  build-web:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - uses: mlugg/setup-zig@v1
      - name: Install dependencies
        uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: build-essential
          version: 1.0
      - run: zig build -Dtarget=wasm32-emscripten -Doptimize=ReleaseSafe
      - name: Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            zig-out/web/game.js
            zig-out/web/game.wasm

      # - name: Deploy to Github Pages
      #   uses: actions/upload-pages-artifact@v3
      #   with:
      #     path: ./zig-out/web

  # deploy-website:
  #   needs: build-web
  #   permissions:
  #     pages: write    # to deploy to Pages
  #     id-token: write # to verify the deployment originates from an appropriate source
  #   environment:
  #     name: github-pages
  #     url: ${{ steps.deployment.outputs.page_url }}
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Deploy to GitHub Pages
  #       id: deployment
  #       uses: actions/deploy-pages@v4
